import { Ionicons } from '@expo/vector-icons';
import React from 'react';
import {
  Dimensions,
  Pressable,
  ScrollView,
  StyleSheet,
  Text,
  View,
} from 'react-native';
import { Card, Separator } from '../components/common';
import { useTheme } from '../contexts/ThemeContext';

interface CalculatorInfoProps {
  onClose: () => void;
}

const CalculatorInfo: React.FC<CalculatorInfoProps> = ({ onClose }) => {
  const { colors } = useTheme();
  const screenHeight = Dimensions.get('window').height;

  // Theme-aware color schemes for investment types
  const investmentColors = {
    lumpsum: { main: colors.primary, bg: colors.primary + '15' },
    sip: { main: colors.success, bg: colors.success + '15' },
    fd: { main: '#3B82F6', bg: '#3B82F615' },
    ppf: { main: '#059669', bg: '#05966915' },
    goal: { main: colors.warning, bg: colors.warning + '15' },
    emi: { main: '#EF4444', bg: '#EF444415' },
    formula1: { main: colors.primary, bg: colors.primary + '10' },
    formula2: { main: colors.success, bg: colors.success + '10' },
    formula3: { main: '#EF4444', bg: '#EF444410' },
    formula4: { main: '#3B82F6', bg: '#3B82F610' },
    formula5: { main: colors.warning, bg: colors.warning + '10' },
    formula6: { main: colors.accent, bg: colors.accent + '10' },
  };

  const InfoSection: React.FC<{ title: string; children: React.ReactNode }> = ({ 
    title, 
    children 
  }) => (
    <View style={styles.infoSection}>
      <Text style={[styles.sectionTitle, { color: colors.text }]}>{title}</Text>
      {children}
    </View>
  );

  const InvestmentCard: React.FC<{ 
    icon: string; 
    title: string; 
    description: string;
    features: string[];
    returns: string;
    risk: string;
    colorKey: keyof typeof investmentColors;
  }> = ({ 
    icon, 
    title, 
    description,
    features,
    returns,
    risk,
    colorKey
  }) => {
    const cardColors = investmentColors[colorKey];
    
    return (
      <Card style={[styles.investmentCard, { backgroundColor: cardColors.bg }]}>
        <View style={styles.investmentHeader}>
          <View style={[styles.investmentIconContainer, { backgroundColor: cardColors.main + '30' }]}>
            <Text style={[styles.investmentIcon, { color: cardColors.main }]}>{icon}</Text>
          </View>
          <View style={styles.investmentTitleContainer}>
            <Text style={[styles.investmentTitle, { color: colors.text }]}>{title}</Text>
            <Text style={[styles.investmentDescription, { color: colors.textSecondary }]}>
              {description}
            </Text>
          </View>
        </View>
        
        <Separator height={12} />
        
        <View style={styles.investmentStats}>
          <View style={styles.statItem}>
            <Text style={[styles.statLabel, { color: colors.textSecondary }]}>L·ª£i nhu·∫≠n d·ª± ki·∫øn</Text>
            <Text style={[styles.statValue, { color: cardColors.main }]}>{returns}</Text>
          </View>
          <View style={styles.statItem}>
            <Text style={[styles.statLabel, { color: colors.textSecondary }]}>M·ª©c ƒë·ªô r·ªßi ro</Text>
            <Text style={[styles.statValue, { color: cardColors.main }]}>{risk}</Text>
          </View>
        </View>
        
        <Separator height={12} />
        
        <View style={styles.featuresContainer}>
          {features.map((feature, index) => (
            <View key={index} style={styles.featureItem}>
              <Ionicons name="checkmark-circle" size={14} color={cardColors.main} />
              <Text style={[styles.featureText, { color: colors.textSecondary }]}>
                {feature}
              </Text>
            </View>
          ))}
        </View>
      </Card>
    );
  };

  const FormulaCard: React.FC<{ 
    title: string; 
    formula: string; 
    explanation: string[];
    colorKey: keyof typeof investmentColors;
  }> = ({ title, formula, explanation, colorKey }) => {
    const cardColors = investmentColors[colorKey];
    
    return (
      <Card style={[styles.formulaCard, { backgroundColor: cardColors.bg }]}>
        <Text style={[styles.formulaTitle, { color: colors.text }]}>{title}</Text>
        <View style={[styles.formulaBox, { 
          backgroundColor: cardColors.main + '20',
          borderColor: cardColors.main + '40'
        }]}>
          <Text style={[styles.formulaText, { color: cardColors.main }]}>{formula}</Text>
        </View>
        <Separator height={12} />
        <View style={styles.explanationContainer}>
          {explanation.map((item, index) => (
            <Text key={index} style={[styles.explanationText, { color: colors.textSecondary }]}>
              {item}
            </Text>
          ))}
        </View>
      </Card>
    );
  };

  const ConceptCard: React.FC<{ 
    icon: string; 
    title: string; 
    description: string;
    color: string;
  }> = ({ icon, title, description, color }) => (
    <View style={[styles.conceptCard, { 
      backgroundColor: colors.surface,
      borderColor: colors.primary + '20',
      borderWidth: 1,
    }]}>
      <View style={[styles.conceptIcon, { backgroundColor: color + '20' }]}>
        <Ionicons name={icon as any} size={20} color={color} />
      </View>
      <Text style={[styles.conceptTitle, { color: colors.text }]}>{title}</Text>
      <Text style={[styles.conceptDesc, { color: colors.textSecondary }]}>
        {description}
      </Text>
    </View>
  );

  const TipCard: React.FC<{ 
    tip: string; 
    category: string;
    color: string;
  }> = ({ tip, category, color }) => (
    <View style={[styles.tipCard, { 
      backgroundColor: colors.surface,
      borderLeftWidth: 4,
      borderLeftColor: color,
    }]}>
      <View style={styles.tipHeader}>
        <View style={[styles.tipBadge, { backgroundColor: color + '20' }]}>
          <Text style={[styles.tipCategory, { color }]}>{category}</Text>
        </View>
      </View>
      <Text style={[styles.tipText, { color: colors.text }]}>{tip}</Text>
    </View>
  );

  return (
    <View style={styles.modalOverlay}>
      <View 
        style={[
          styles.modalContent, 
          { 
            backgroundColor: colors.background,
            maxHeight: screenHeight * 0.95
          }
        ]}
      >
        {/* Header */}
        <View style={[styles.modalHeader, { 
          backgroundColor: colors.surface,
          borderBottomWidth: 1,
          borderBottomColor: colors.primary + '20'
        }]}>
          <View style={styles.headerContent}>
            <View style={styles.headerText}>
              <Text style={[styles.modalTitle, { color: colors.text }]}>
                üìä H∆∞·ªõng d·∫´n t√≠nh to√°n ƒë·∫ßu t∆∞ ƒë·∫ßy ƒë·ªß
              </Text>
              <Text style={[styles.modalSubtitle, { color: colors.textSecondary }]}>
                M·ªçi th·ª© b·∫°n c·∫ßn bi·∫øt v·ªÅ ƒë·∫ßu t∆∞
              </Text>
            </View>
            <Pressable 
              style={[styles.closeButton, { backgroundColor: colors.primary + '20' }]} 
              onPress={onClose}
            >
              <Ionicons name="close" size={22} color={colors.primary} />
            </Pressable>
          </View>
        </View>

        <ScrollView 
          style={styles.scrollContent} 
          showsVerticalScrollIndicator={false}
          contentContainerStyle={styles.scrollContainer}
        >
          {/* Quick Overview */}
          <InfoSection title="üéØ T·ªïng quan v·ªÅ c√¥ng c·ª• t√≠nh to√°n ƒë·∫ßu t∆∞">
            <Card>
              <View style={styles.sectionContent}>
                <Text style={[styles.sectionDescription, { color: colors.textSecondary }]}>
                  C√¥ng c·ª• t√≠nh to√°n to√†n di·ªán c·ªßa ch√∫ng t√¥i h·ªó tr·ª£ 6 lo·∫°i h√¨nh ƒë·∫ßu t∆∞, gi√∫p b·∫°n ƒë∆∞a ra quy·∫øt ƒë·ªãnh t√†i ch√≠nh s√°ng su·ªët. D√π b·∫°n ƒëang l√™n k·∫ø ho·∫°ch ngh·ªâ h∆∞u, mua nh√† hay t√≠ch l≈©y t√†i s·∫£n, ch√∫ng t√¥i ƒë·ªÅu c√≥ nh·ªØng c√¥ng c·ª• c·∫ßn thi·∫øt.
                </Text>
                
                <Separator height={16} />
                
                <View style={styles.quickStats}>
                  <View style={[styles.quickStatItem, { backgroundColor: colors.primary + '15' }]}>
                    <Text style={[styles.quickStatNumber, { color: colors.primary }]}>6</Text>
                    <Text style={[styles.quickStatLabel, { color: colors.primary }]}>C√¥ng c·ª• t√≠nh to√°n</Text>
                  </View>
                  <View style={[styles.quickStatItem, { backgroundColor: colors.success + '15' }]}>
                    <Text style={[styles.quickStatNumber, { color: colors.success }]}>15+</Text>
                    <Text style={[styles.quickStatLabel, { color: colors.success }]}>C√¥ng th·ª©c</Text>
                  </View>
                  <View style={[styles.quickStatItem, { backgroundColor: colors.warning + '15' }]}>
                    <Text style={[styles.quickStatNumber, { color: colors.warning }]}>100%</Text>
                    <Text style={[styles.quickStatLabel, { color: colors.warning }]}>Ch√≠nh x√°c</Text>
                  </View>
                </View>
              </View>
            </Card>
          </InfoSection>

          <Separator height={24} />

          {/* Investment Types */}
          <InfoSection title="üí∞ Gi·∫£i th√≠ch c√°c lo·∫°i h√¨nh ƒë·∫ßu t∆∞">
            <View style={styles.investmentTypesContainer}>
              <InvestmentCard
                icon="üí∞"
                title="ƒê·∫ßu t∆∞ tr·ªçn g√≥i"
                description="ƒê·∫ßu t∆∞ m·ªôt l·∫ßn v·ªõi tƒÉng tr∆∞·ªüng k√©p"
                features={[
                  "ƒê·∫ßu t∆∞ tr·∫£ tr∆∞·ªõc m·ªôt l·∫ßn",
                  "T√≠nh to√°n l√£i k√©p", 
                  "T√πy ch·ªçn k·ª≥ h·∫°n linh ho·∫°t",
                  "T·ªët nh·∫•t cho s·ªë ti·ªÅn l·ªõn"
                ]}
                returns="8-15%/nƒÉm"
                risk="Trung b√¨nh ƒë·∫øn Cao"
                colorKey="lumpsum"
              />
              
              <Separator height={16} />
              
              <InvestmentCard
                icon="üìà"
                title="ƒê·∫ßu t∆∞ ƒë·ªãnh k·ª≥"
                description="ƒê·∫ßu t∆∞ nh·ªè h√†ng th√°ng ƒë·ªÉ gi·∫£m r·ªßi ro"
                features={[
                  "ƒê·∫ßu t∆∞ h√†ng th√°ng",
                  "L·ª£i √≠ch c·ªßa vi·ªác trung b√¨nh h√≥a chi ph√≠",
                  "T√≠ch l≈©y theo th·ªùi gian", 
                  "B·∫Øt ƒë·∫ßu v·ªõi s·ªë ti·ªÅn nh·ªè"
                ]}
                returns="10-15%/nƒÉm"
                risk="Trung b√¨nh ƒë·∫øn Cao"
                colorKey="sip"
              />
              
              <Separator height={16} />
              
              <InvestmentCard
                icon="üè¶"
                title="Ti·ªÅn g·ª≠i c√≥ k·ª≥ h·∫°n"
                description="ƒê·∫ßu t∆∞ an to√†n v·ªõi l√£i su·∫•t c·ªë ƒë·ªãnh"
                features={[
                  "B·∫£o ƒë·∫£m v·ªën g·ªëc",
                  "L√£i su·∫•t c·ªë ƒë·ªãnh",
                  "L√£i k√©p h√†ng qu√Ω",
                  "Ph√π h·ª£p v·ªõi c√°c nh√† ƒë·∫ßu t∆∞ tr√°nh r·ªßi ro"
                ]}
                returns="5-7%/nƒÉm"
                risk="R·∫•t Th·∫•p"
                colorKey="fd"
              />
              
              <Separator height={16} />
              
              <InvestmentCard
                icon="üõ°Ô∏è"
                title="Qu·ªπ h∆∞u tr√≠ t·ª± nguy·ªán"
                description="ƒê·∫ßu t∆∞ d√†i h·∫°n v·ªõi l·ª£i √≠ch thu·∫ø"
                features={[
                  "Th·ªùi h·∫°n kh√≥a 15 nƒÉm",
                  "Kh·∫•u tr·ª´ thu·∫ø theo M·ª•c 80C",
                  "Mi·ªÖn thu·∫ø lai su·∫•t",
                  "L√£i su·∫•t do ch√≠nh ph·ªß x√°c ƒë·ªãnh"
                ]}
                returns="7.1%/nƒÉm"
                risk="R·∫•t Th·∫•p"
                colorKey="ppf"
              />
              
              <Separator height={16} />
              
              <InvestmentCard
                icon="üéØ"
                title="K·∫ø ho·∫°ch d·ª±a tr√™n m·ª•c ti√™u"
                description="ƒê·∫ßu t∆∞ theo m·ª•c ti√™u t√†i ch√≠nh c·ª• th·ªÉ"
                features={[
                  "L·ª£i nhu·∫≠n theo m·ª•c ti√™u",  
                  "T√πy ch·ªânh theo th·ªùi gian v√† m·ª•c ti√™u",
                  "K·∫ø ho·∫°ch h√≥a t√†i ch√≠nh",
                  "Bi·∫øn ∆∞·ªõc m∆° th√†nh hi·ªán th·ª±c"
                ]}
                returns="C√≥ th·ªÉ thay ƒë·ªïi"
                risk="D·ª±a tr√™n m·ª•c ti√™u"
                colorKey="goal"
              />
              
              <Separator height={16} />
              
              <InvestmentCard
                icon="üè†"
                title="Kho·∫£n tr·∫£ h√†ng th√°ng"
                description="T√≠nh to√°n c√°c kho·∫£n tr·∫£ g√≥p h√†ng th√°ng v√† t·ªïng l√£i su·∫•t"
                features={[
                  "T√≠nh to√°n EMI h√†ng th√°ng",
                  "T·ªïng s·ªë ti·ªÅn l√£i ph·∫£i tr·∫£",
                  "Kh·∫•u hao kho·∫£n vay",
                  "Vay mua nh√†, xe h∆°i, c√° nh√¢n"
                ]}
                returns="N/A"
                risk="Rui ro theo l√£i su·∫•t"
                colorKey="emi"
              />
            </View>
          </InfoSection>

          <Separator height={24} />

          {/* Key Formulas */}
          <InfoSection title="üßÆ C√¥ng th·ª©c t√≠nh to√°n c√°c kho·∫£n ƒë·∫ßu t∆∞">
            <View style={styles.formulasContainer}>
              <FormulaCard
                title="Compound Interest"
                formula="A = P(1 + r/n)^(nt)"
                explanation={[
                  "A = Final amount",
                  "P = Principal (initial investment)", 
                  "r = Annual interest rate (decimal)",
                  "n = Compounding frequency per year",
                  "t = Time in years"
                ]}
                colorKey="formula1"
              />
              
              <Separator height={16} />
              
              <FormulaCard
                title="SIP Future Value"
                formula="FV = PMT √ó [((1 + r)^n - 1) / r]"
                explanation={[
                  "FV = Future value of SIP",
                  "PMT = Monthly payment amount",
                  "r = Monthly interest rate",
                  "n = Total number of payments"
                ]}
                colorKey="formula2"
              />
              
              <Separator height={16} />
              
              <FormulaCard
                title="EMI Calculation"
                formula="EMI = P √ó r √ó (1+r)^n / [(1+r)^n-1]"
                explanation={[
                  "EMI = Equated Monthly Installment",
                  "P = Principal loan amount",
                  "r = Monthly interest rate",
                  "n = Number of monthly installments"
                ]}
                colorKey="formula3"
              />
              
              <Separator height={16} />
              
              <FormulaCard
                title="Simple Interest"
                formula="SI = P √ó r √ó t"
                explanation={[
                  "SI = Simple interest earned",
                  "P = Principal amount",
                  "r = Annual interest rate (decimal)",
                  "t = Time period in years"
                ]}
                colorKey="formula4"
              />
              
              <Separator height={16} />
              
              <FormulaCard
                title="Real Rate of Return"
                formula="Real Rate = (1 + Nominal Rate) / (1 + Inflation) - 1"
                explanation={[
                  "Adjusts returns for inflation impact",
                  "Nominal Rate = Stated investment return",
                  "Inflation = Annual inflation rate",
                  "Real Rate = Actual purchasing power gain"
                ]}
                colorKey="formula5"
              />
              
              <Separator height={16} />
              
              <FormulaCard
                title="Rule of 72"
                formula="Years to Double = 72 / Interest Rate"
                explanation={[
                  "Quick way to estimate doubling time",
                  "Interest Rate = Annual return percentage",
                  "Example: At 12%, money doubles in 6 years",
                  "Useful for quick mental calculations"
                ]}
                colorKey="formula6"
              />
            </View>
          </InfoSection>

          <Separator height={24} />

          {/* Financial Concepts */}
          <InfoSection title="üìö C√°c kh√°i ni·ªám t√†i ch√≠nh quan tr·ªçng">
            <Card>
              <View style={styles.sectionContent}>
                <View style={styles.conceptsGrid}>
                  <ConceptCard
                    icon="trending-up"
                    title="L√£i k√©p"
                    description="L√£i su·∫•t ƒë∆∞·ª£c t√≠nh tr√™n l√£i su·∫•t ƒë√£ t√≠ch l≈©y, l√†m tƒÉng gi√° tr·ªã ƒë·∫ßu t∆∞ theo th·ªùi gian."
                    color={colors.success}
                  />
                  
                  <ConceptCard
                    icon="repeat"
                    title="Chi phi trung b√¨nh d·ª±a tr√™n th·ªùi gian"
                    description="ƒê·∫ßu t∆∞ ƒë·ªãnh k·ª≥ gi√∫p gi·∫£m r·ªßi ro th·ªã tr∆∞·ªùng b·∫±ng c√°ch mua nhi·ªÅu h∆°n khi gi√° th·∫•p v√† √≠t h∆°n khi gi√° cao."
                    color={colors.primary}
                  />
                  
                  <ConceptCard
                    icon="shield-checkmark"
                    title="R·ªßi ro so v·ªõi L·ª£i nhu·∫≠n"
                    description="L·ª£i nhu·∫≠n cao h∆°n th∆∞·ªùng ƒëi k√®m v·ªõi r·ªßi ro cao h∆°n. ƒê√°nh gi√° r·ªßi ro tr∆∞·ªõc khi ƒë·∫ßu t∆∞."
                    color={colors.warning}
                  />
                  
                  <ConceptCard
                    icon="time"
                    title="Gi√° tr·ªã th·ªùi gian c·ªßa ti·ªÅn"
                    description="Ti·ªÅn ng√†y nay c√≥ gi√° tr·ªã h∆°n s·ªë ti·ªÅn t∆∞∆°ng t·ª± trong t∆∞∆°ng lai do ti·ªÅm nƒÉng sinh l·ªùi."
                    color={colors.accent}
                  />
                  
                  <ConceptCard
                    icon="pie-chart"
                    title="ƒêa d·∫°ng h√≥a"
                    description="Ph√¢n b·ªï ƒë·∫ßu t∆∞ gi·ªØa c√°c lo·∫°i t√†i s·∫£n kh√°c nhau ƒë·ªÉ gi·∫£m r·ªßi ro t·ªïng th·ªÉ."
                    color={colors.primary}
                  />
                  
                  <ConceptCard
                    icon="calculator"
                    title="Ph√¢n b·ªï t√†i s·∫£n"
                    description="Chia t√†i s·∫£n ƒë·∫ßu t∆∞ gi·ªØa c·ªï phi·∫øu, tr√°i phi·∫øu, ti·ªÅn m·∫∑t v√† c√°c lo·∫°i t√†i s·∫£n kh√°c ƒë·ªÉ c√¢n b·∫±ng r·ªßi ro v√† l·ª£i nhu·∫≠n."
                    color={colors.success}
                  />
                </View>
              </View>
            </Card>
          </InfoSection>

          <Separator height={24} />

          {/* Investment Strategies */}
          <InfoSection title="üéØ Chi·∫øn l∆∞·ª£c ƒë·∫ßu t∆∞ th√¥ng minh">
            <View style={styles.strategiesContainer}>
              <TipCard
                category="Ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu"
                tip="B·∫Øt ƒë·∫ßu v·ªõi s·ªë ti·ªÅn nh·ªè trong SIP ƒë·ªÉ x√¢y d·ª±ng k·ª∑ lu·∫≠t ƒë·∫ßu t∆∞. B·∫Øt ƒë·∫ßu v·ªõi qu·ªπ t∆∞∆°ng h·ªó c·ªï phi·∫øu ƒë·ªÉ tƒÉng tr∆∞·ªüng d√†i h·∫°n."
                color={colors.success}
              />
              
              <TipCard
                category="Qu·ªπ kh·∫©n c·∫•p"
                tip="Gi·ªØ 6-12 th√°ng chi ph√≠ trong c√°c kho·∫£n ƒë·∫ßu t∆∞ thanh kho·∫£n nh∆∞ t√†i kho·∫£n ti·∫øt ki·ªám ho·∫∑c qu·ªπ thanh kho·∫£n tr∆∞·ªõc khi ƒë·∫ßu t∆∞ v√†o n∆°i kh√°c."
                color={colors.warning}
              />
              
              <TipCard
                category="D·ª±a tr√™n m·ª•c ti√™u"
                tip="X√°c ƒë·ªãnh m·ª•c ti√™u t√†i ch√≠nh r√µ r√†ng (nh∆∞ mua nh√†, ngh·ªâ h∆∞u) v√† ch·ªçn c√¥ng c·ª• ƒë·∫ßu t∆∞ ph√π h·ª£p v·ªõi th·ªùi gian v√† r·ªßi ro."
                color={colors.primary}
              />
              
              <TipCard
                category="L·∫≠p k·∫ø ho·∫°ch thu·∫ø"
                tip="T·∫≠n d·ª•ng c√°c kho·∫£n ƒë·∫ßu t∆∞ mi·ªÖn thu·∫ø nh∆∞ PPF, ELSS v√† c√°c kho·∫£n kh·∫•u tr·ª´ thu·∫ø theo M·ª•c 80C ƒë·ªÉ gi·∫£m g√°nh n·∫∑ng thu·∫ø."
                color={colors.accent}
              />
              
              <TipCard
                category="Qu·∫£n l√Ω r·ªßi ro"
                tip="ƒêa d·∫°ng h√≥a danh m·ª•c ƒë·∫ßu t∆∞ v√†o nhi·ªÅu lo·∫°i t√†i s·∫£n v√† lƒ©nh v·ª±c. ƒê·ª´ng b·ªè t·∫•t c·∫£ tr·ª©ng v√†o m·ªôt gi·ªè - h√£y ph√¢n t√°n ƒë·∫ßu t∆∞."
                color={colors.primary}
              />
              
              <TipCard
                category="D√†i h·∫°n"
                tip="H√£y ƒë·∫ßu t∆∞ d√†i h·∫°n. Vi·ªác x√°c ƒë·ªãnh th·ªùi ƒëi·ªÉm th·ªã tr∆∞·ªùng r·∫•t kh√≥ - th·ªùi gian ·ªü tr√™n th·ªã tr∆∞·ªùng quan tr·ªçng h∆°n vi·ªác x√°c ƒë·ªãnh th·ªùi ƒëi·ªÉm th·ªã tr∆∞·ªùng."
                color={colors.success}
              />
            </View>
          </InfoSection>

          <Separator height={24} />

          {/* Expected Returns Guide */}
          <InfoSection title="üìä H∆∞·ªõng d·∫´n v·ªÅ l·ª£i nhu·∫≠n ƒë·∫ßu t∆∞">
            <Card>
              <View style={styles.sectionContent}>
                <View style={[styles.returnsTable, { 
                  backgroundColor: colors.surface,
                  borderWidth: 1,
                  borderColor: colors.primary + '20'
                }]}>
                  <View style={[styles.returnsHeader, { backgroundColor: colors.primary + '15' }]}>
                    <Text style={[styles.returnsHeaderText, { color: colors.text }]}>ƒê·∫ßu t∆∞</Text>
                    <Text style={[styles.returnsHeaderText, { color: colors.text }]}>L·ª£i nhu·∫≠n</Text>
                    <Text style={[styles.returnsHeaderText, { color: colors.text }]}>R·ªßi ro</Text>
                    <Text style={[styles.returnsHeaderText, { color: colors.text }]}>Thanh kho·∫£n</Text>
                  </View>
                  
                  <View style={[styles.returnsRow, { borderBottomColor: colors.primary + '10' }]}>
                    <Text style={[styles.returnsCell, { color: colors.textSecondary }]}>T√†i kho·∫£n ti·∫øt ki·ªám</Text>
                    <Text style={[styles.returnsCell, { color: colors.success }]}>3-4%</Text>
                    <Text style={[styles.returnsCell, { color: colors.success }]}>R·∫•t th·∫•p</Text>
                    <Text style={[styles.returnsCell, { color: colors.success }]}>Cao</Text>
                  </View>
                  
                  <View style={[styles.returnsRow, { borderBottomColor: colors.primary + '10' }]}>
                    <Text style={[styles.returnsCell, { color: colors.textSecondary }]}>Ti·ªÅn g·ª≠i c·ªë ƒë·ªãnh</Text>
                    <Text style={[styles.returnsCell, { color: colors.success }]}>5-7%</Text>
                    <Text style={[styles.returnsCell, { color: colors.success }]}>Th·∫•p</Text>
                    <Text style={[styles.returnsCell, { color: colors.warning }]}>Trung b√¨nh</Text>
                  </View>
                  
                  <View style={[styles.returnsRow, { borderBottomColor: colors.primary + '10' }]}>
                    <Text style={[styles.returnsCell, { color: colors.textSecondary }]}>PPF</Text>
                    <Text style={[styles.returnsCell, { color: colors.success }]}>7.1%</Text>
                    <Text style={[styles.returnsCell, { color: colors.success }]}>R·∫•t th·∫•p</Text>
                    <Text style={[styles.returnsCell, { color: colors.error || '#EF4444' }]}>Th·∫•p</Text>
                  </View>
                  
                  <View style={[styles.returnsRow, { borderBottomColor: colors.primary + '10' }]}>
                    <Text style={[styles.returnsCell, { color: colors.textSecondary }]}>Qu·ªπ t∆∞∆°ng h·ªó</Text>
                    <Text style={[styles.returnsCell, { color: colors.warning }]}>6-9%</Text>
                    <Text style={[styles.returnsCell, { color: colors.warning }]}>Th·∫•p-Trung b√¨nh</Text>
                    <Text style={[styles.returnsCell, { color: colors.success }]}>Cao</Text>
                  </View>
                  
                  <View style={[styles.returnsRow, { borderBottomColor: colors.primary + '10' }]}>
                    <Text style={[styles.returnsCell, { color: colors.textSecondary }]}>Qu·ªπ c·ªï phi·∫øu</Text>
                    <Text style={[styles.returnsCell, { color: colors.primary }]}>10-15%</Text>
                    <Text style={[styles.returnsCell, { color: colors.error || '#EF4444' }]}>Cao</Text>
                    <Text style={[styles.returnsCell, { color: colors.success }]}>Cao</Text>
                  </View>
                  
                  <View style={[styles.returnsRow, { borderBottomColor: colors.primary + '10' }]}>
                    <Text style={[styles.returnsCell, { color: colors.textSecondary }]}>C·ªï phi·∫øu tr·ª±c ti·∫øp</Text>
                    <Text style={[styles.returnsCell, { color: colors.primary }]}>12-18%</Text>
                    <Text style={[styles.returnsCell, { color: colors.error || '#EF4444' }]}>R·∫•t cao</Text>
                    <Text style={[styles.returnsCell, { color: colors.success }]}>Cao</Text>
                  </View>
                  
                  <View style={[styles.returnsRow, { borderBottomColor: colors.primary + '10' }]}>
                    <Text style={[styles.returnsCell, { color: colors.textSecondary }]}>B·∫•t ƒë·ªông s·∫£n</Text>
                    <Text style={[styles.returnsCell, { color: colors.warning }]}>8-12%</Text>
                    <Text style={[styles.returnsCell, { color: colors.warning }]}>Trung b√¨nh</Text>
                    <Text style={[styles.returnsCell, { color: colors.error || '#EF4444' }]}>R·∫•t th·∫•p</Text>
                  </View>
                  
                  <View style={styles.returnsRow}>
                    <Text style={[styles.returnsCell, { color: colors.textSecondary }]}>V√†ng</Text>
                    <Text style={[styles.returnsCell, { color: colors.warning }]}>6-10%</Text>
                    <Text style={[styles.returnsCell, { color: colors.warning }]}>Trung b√¨nh</Text>
                    <Text style={[styles.returnsCell, { color: colors.warning }]}>Trung b√¨nh</Text>
                  </View>
                </View>
                
                <Separator height={16} />
                
                <View style={[styles.disclaimerBox, { backgroundColor: colors.warning + '10' }]}>
                  <Ionicons name="information-circle" size={16} color={colors.warning} />
                  <Text style={[styles.disclaimerText, { color: colors.textSecondary }]}>
                    L·ª£i nhu·∫≠n l√† m·ª©c trung b√¨nh l·ªãch s·ª≠ v√† kh√¥ng ƒë∆∞·ª£c ƒë·∫£m b·∫£o. Hi·ªáu su·∫•t trong qu√° kh·ª© kh√¥ng ch·ªâ ra k·∫øt qu·∫£ trong t∆∞∆°ng lai.
                  </Text>
                </View>
              </View>
            </Card>
          </InfoSection>

          <Separator height={24} />

          {/* Tax Implications */}
          <InfoSection title="üí∏ √ù nghƒ©a v√† k·∫ø ho·∫°ch v·ªÅ thu·∫ø">
            <Card>
              <View style={styles.sectionContent}>
                <View style={styles.taxContainer}>
                  <View style={[styles.taxCard, { 
                    backgroundColor: colors.success + '10',
                    borderColor: colors.success + '30',
                    borderWidth: 1,
                  }]}>
                    <Text style={[styles.taxTitle, { color: colors.success }]}>ƒê·∫ßu t∆∞ mi·ªÖn thu·∫ø</Text>
                    <Text style={[styles.taxDesc, { color: colors.textSecondary }]}>
                      PPF, EPF, Life Insurance, ELSS (after 3 years), NSC
                    </Text>
                  </View>
                  
                  <View style={[styles.taxCard, { 
                    backgroundColor: colors.warning + '10',
                    borderColor: colors.warning + '30',
                    borderWidth: 1,
                  }]}>
                    <Text style={[styles.taxTitle, { color: colors.warning }]}>C√≥ th·ªÉ kh·∫•u tr·ª´ thu·∫ø (80C)</Text>
                    <Text style={[styles.taxDesc, { color: colors.textSecondary }]}>
                      PPF, ELSS, Life Insurance, NSC, FD (5-year), Home Loan Principal
                    </Text>
                  </View>
                  
                  <View style={[styles.taxCard, { 
                    backgroundColor: (colors.error || '#EF4444') + '10',
                    borderColor: (colors.error || '#EF4444') + '30',
                    borderWidth: 1,
                  }]}>
                    <Text style={[styles.taxTitle, { color: colors.error || '#EF4444' }]}>ƒê·∫ßu t∆∞ ch·ªãu thu·∫ø</Text>
                    <Text style={[styles.taxDesc, { color: colors.textSecondary }]}>
                      FD Interest, Mutual Fund Gains, Stock Trading, Real Estate
                    </Text>
                  </View>
                </View>
              </View>
            </Card>
          </InfoSection>

          <Separator height={24} />

          {/* Important Disclaimers */}
          <InfoSection title="‚ö†Ô∏è Tuy√™n b·ªë mi·ªÖn tr·ª´ tr√°ch nhi·ªám quan tr·ªçng">
            <Card>
              <View style={[styles.warningBox, { 
                backgroundColor: (colors.error || '#EF4444') + '10',
                borderColor: (colors.error || '#EF4444') + '30'
              }]}>
                <Ionicons name="warning" size={20} color={colors.error || '#EF4444'} style={styles.warningIcon} />
                <View style={styles.warningContent}>
                  <Text style={[styles.warningTitle, { color: colors.error || '#EF4444' }]}>
                    Th√¥ng b√°o r·ªßi ro ƒë·∫ßu t∆∞
                  </Text>
                  <Text style={[styles.warningText, { color: colors.text }]}>
                    ‚Ä¢ T·∫•t c·∫£ c√°c t√≠nh to√°n ƒë·ªÅu l√† ∆∞·ªõc t√≠nh d·ª±a tr√™n th√¥ng tin ƒë·∫ßu v√†o c·ªßa b·∫°n{'\n'}
                    ‚Ä¢ ƒê·∫ßu t∆∞ th·ªã tr∆∞·ªùng ph·∫£i ch·ªãu r·ªßi ro th·ªã tr∆∞·ªùng{'\n'}
                    ‚Ä¢ Hi·ªáu su·∫•t trong qu√° kh·ª© kh√¥ng ƒë·∫£m b·∫£o k·∫øt qu·∫£ trong t∆∞∆°ng lai{'\n'}
                    ‚Ä¢ H√£y c√¢n nh·∫Øc vi·ªác tham kh·∫£o √Ω ki·∫øn c·ªë v·∫•n t√†i ch√≠nh ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n c√° nh√¢n{'\n'}
                    ‚Ä¢ L·∫°m ph√°t c√≥ th·ªÉ ·∫£nh h∆∞·ªüng ƒë·∫øn l·ª£i nhu·∫≠n th·ª±c t·∫ø theo th·ªùi gian{'\n'}
                    ‚Ä¢ S·ª± ƒëa d·∫°ng h√≥a c√≥ √≠ch nh∆∞ng kh√¥ng lo·∫°i b·ªè ƒë∆∞·ª£c r·ªßi ro{'\n'}
                    ‚Ä¢ B·∫Øt ƒë·∫ßu s·ªõm v√† ƒë·∫ßu t∆∞ th∆∞·ªùng xuy√™n ƒë·ªÉ c√≥ k·∫øt qu·∫£ t·ªët nh·∫•t
                  </Text>
                </View>
              </View>
            </Card>
          </InfoSection>

          <Separator height={40} />
        </ScrollView>
      </View>
    </View>
  );
};

const styles = StyleSheet.create({
  modalOverlay: {
    flex: 1,
    backgroundColor: 'rgba(0, 0, 0, 0.6)',
    justifyContent: 'flex-end',
  },
  modalContent: {
    borderTopLeftRadius: 24,
    borderTopRightRadius: 24,
    paddingBottom: 20,
  },
  modalHeader: {
    borderTopLeftRadius: 24,
    borderTopRightRadius: 24,
    paddingTop: 8,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
  },
  headerContent: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    padding: 20,
  },
  headerText: {
    flex: 1,
  },
  modalTitle: {
    fontSize: 22,
    fontWeight: '800',
    marginBottom: 4,
  },
  modalSubtitle: {
    fontSize: 15,
    fontWeight: '500',
  },
  closeButton: {
    width: 40,
    height: 40,
    borderRadius: 20,
    justifyContent: 'center',
    alignItems: 'center',
    marginLeft: 16,
  },
  scrollContent: {
    paddingHorizontal: 20,
  },
  scrollContainer: {
    paddingBottom: 20,
  },
  infoSection: {
    marginBottom: 8,
  },
  sectionTitle: {
    fontSize: 20,
    fontWeight: '800',
    marginBottom: 16,
  },
  sectionContent: {
    padding: 16,
  },
  sectionDescription: {
    fontSize: 15,
    lineHeight: 22,
    fontWeight: '500',
  },

  // Quick Stats
  quickStats: {
    flexDirection: 'row',
    gap: 12,
  },
  quickStatItem: {
    flex: 1,
    padding: 12,
    borderRadius: 12,
    alignItems: 'center',
  },
  quickStatNumber: {
    fontSize: 20,
    fontWeight: '800',
  },
  quickStatLabel: {
    fontSize: 12,
    fontWeight: '600',
    marginTop: 2,
  },

  // Investment Cards
  investmentTypesContainer: {
    gap: 0,
  },
  investmentCard: {
    padding: 16,
    borderRadius: 16,
    marginBottom: 4,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.05,
    shadowRadius: 4,
    elevation: 2,
  },
  investmentHeader: {
    flexDirection: 'row',
    alignItems: 'flex-start',
  },
  investmentIconContainer: {
    width: 40,
    height: 40,
    borderRadius: 20,
    justifyContent: 'center',
    alignItems: 'center',
    marginRight: 12,
  },
  investmentIcon: {
    fontSize: 20,
  },
  investmentTitleContainer: {
    flex: 1,
  },
  investmentTitle: {
    fontSize: 17,
    fontWeight: '800',
    marginBottom: 4,
  },
  investmentDescription: {
    fontSize: 14,
    lineHeight: 18,
    fontWeight: '500',
  },
  investmentStats: {
    flexDirection: 'row',
    gap: 16,
  },
  statItem: {
    flex: 1,
  },
  statLabel: {
    fontSize: 12,
    fontWeight: '600',
    marginBottom: 2,
  },
  statValue: {
    fontSize: 14,
    fontWeight: '800',
  },
  featuresContainer: {
    gap: 6,
  },
  featureItem: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  featureText: {
    fontSize: 13,
    marginLeft: 8,
    flex: 1,
    lineHeight: 16,
    fontWeight: '500',
  },

  // Formula Cards
  formulasContainer: {
    gap: 0,
  },
  formulaCard: {
    padding: 16,
    borderRadius: 16,
    marginBottom: 4,
  },
  formulaTitle: {
    fontSize: 16,
    fontWeight: '800',
    marginBottom: 12,
    textAlign: 'center',
  },
  formulaBox: {
    padding: 16,
    borderRadius: 12,
    borderWidth: 2,
    alignItems: 'center',
  },
  formulaText: {
    fontSize: 18,
    fontWeight: '800',
    fontFamily: 'monospace',
  },
  explanationContainer: {
    gap: 4,
  },
  explanationText: {
    fontSize: 13,
    lineHeight: 16,
    fontWeight: '500',
    fontFamily: 'monospace',
  },

  // Concept Cards
  conceptsGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    gap: 12,
  },
  conceptCard: {
    flex: 1,
    minWidth: '45%',
    padding: 14,
    borderRadius: 12,
    alignItems: 'center',
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 1 },
    shadowOpacity: 0.05,
    shadowRadius: 2,
    elevation: 2,
  },
  conceptIcon: {
    width: 36,
    height: 36,
    borderRadius: 18,
    justifyContent: 'center',
    alignItems: 'center',
    marginBottom: 8,
  },
  conceptTitle: {
    fontSize: 14,
    fontWeight: '700',
    marginBottom: 6,
    textAlign: 'center',
  },
  conceptDesc: {
    fontSize: 12,
    textAlign: 'center',
    lineHeight: 16,
    fontWeight: '500',
  },

  // Strategy Tips
  strategiesContainer: {
    gap: 12,
  },
  tipCard: {
    padding: 16,
    borderRadius: 12,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 1 },
    shadowOpacity: 0.05,
    shadowRadius: 2,
    elevation: 2,
  },
  tipHeader: {
    marginBottom: 8,
  },
  tipBadge: {
    alignSelf: 'flex-start',
    paddingHorizontal: 10,
    paddingVertical: 4,
    borderRadius: 8,
  },
  tipCategory: {
    fontSize: 12,
    fontWeight: '700',
  },
  tipText: {
    fontSize: 14,
    lineHeight: 20,
    fontWeight: '500',
  },

  // Returns Table
  returnsTable: {
    borderRadius: 12,
    overflow: 'hidden',
  },
  returnsHeader: {
    flexDirection: 'row',
    paddingVertical: 12,
    paddingHorizontal: 8,
  },
  returnsHeaderText: {
    flex: 1,
    fontSize: 13,
    fontWeight: '800',
    textAlign: 'center',
  },
  returnsRow: {
    flexDirection: 'row',
    paddingVertical: 8,
    paddingHorizontal: 8,
    borderBottomWidth: 0.5,
  },
  returnsCell: {
    flex: 1,
    fontSize: 12,
    textAlign: 'center',
    fontWeight: '600',
  },

  // Tax Section
  taxContainer: {
    gap: 12,
  },
  taxCard: {
    padding: 14,
    borderRadius: 12,
  },
  taxTitle: {
    fontSize: 15,
    fontWeight: '800',
    marginBottom: 6,
  },
  taxDesc: {
    fontSize: 13,
    lineHeight: 18,
    fontWeight: '500',
  },

  // Disclaimers
  disclaimerBox: {
    flexDirection: 'row',
    alignItems: 'flex-start',
    padding: 12,
    borderRadius: 10,
  },
  disclaimerText: {
    fontSize: 12,
    marginLeft: 8,
    flex: 1,
    lineHeight: 16,
    fontWeight: '500',
    fontStyle: 'italic',
  },
  warningBox: {
    flexDirection: 'row',
    alignItems: 'flex-start',
    padding: 16,
    borderRadius: 12,
    borderWidth: 2,
  },
  warningIcon: {
    marginRight: 12,
    marginTop: 2,
  },
  warningContent: {
    flex: 1,
  },
  warningTitle: {
    fontSize: 16,
    fontWeight: '800',
    marginBottom: 8,
  },
  warningText: {
    fontSize: 14,
    lineHeight: 20,
    fontWeight: '500',
  },
});

export default CalculatorInfo;